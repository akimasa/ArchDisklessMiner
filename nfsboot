# vim: set ft=sh:
run_hook() {
    local line i net_mac bootif_mac bootif_dev defaultrootpath defaultserver
    # These variables will be parsed from /tmp/net-*.conf generated by ipconfig
    local DEVICE
    local IPV4ADDR IPV4BROADCAST IPV4NETMASK IPV4GATEWAY IPV4DNS0 IPV4DNS1
    local HOSTNAME DNSDOMAIN NISDOMAIN ROOTSERVER ROOTPATH
    local filename
    # /tmp/net-*.conf

    if [ -z "${ip}" -a -n "${nfsaddrs}" ]; then
        ip="${nfsaddrs}"
    fi

    if [ -n "${ip}" ]; then
        if [ -n "${BOOTIF}" ]; then
            bootif_mac=${BOOTIF#01-}
            bootif_mac=${bootif_mac//-/:}
            for i in /sys/class/net/*/address; do
                read net_mac < ${i}
                if [ "${bootif_mac}" == "${net_mac}" ]; then
                    bootif_dev=${i#/sys/class/net/}
                    bootif_dev=${bootif_dev%/address}
                    break
                fi
            done
            ip="${ip}::${bootif_dev}"
        fi

        # setup network and save some values
        ipconfig "ip=${ip}"

        for conf in /tmp/net-*.conf; do
            [ -f "$conf" ] && . "$conf"
        done

        # calculate nfs_server, nfs_path and nfs_option for later nfs mount

            echo "NFS-Mount: ${nfs_server}:${nfs_path}"

            # set mount handler for NFS
            mount_handler="nfs_mount_handler"

    fi
}

nfs_mount_handler() {
    mount.nfs4 ${nfs_option:+-o ${nfs_option}} "${serverip}:/srv/arch" "$1"
}

# vim: set ft=sh ts=4 sw=4 et:
